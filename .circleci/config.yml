version: 2.0 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/repository # our name of the directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:10.16.3 # Using pre-built circle-Ci Docker Image
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run: # Update Yarn if required
          name: update yarn
          command: "sudo yarn upgrade"
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: # Run Yarn
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache: # special step to save the dependency cache
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Run Jest Test
          command: yarn test
      - run: # Test Build the Project
          name: Testing the Build Process "#Will it Build?"
          command: yarn build
  deploy: # deploy script
    working_directory: ~/repository
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - run: # Update Yarn if required
          name: update yarn
          command: "sudo yarn upgrade"
      - restore_cache: # special step to restore the dependency cache
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: # Run Yarn
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache: # special step to save the dependency cache
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: # Build the Project
          name: react-build
          command: yarn build
      - run: # Deploy to Firebase
          name: Deploy to Firebase
          command: yarn deploy

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build # perform this first
      - deploy: # perform second
          requires:
            - build
          filters: # only for the master branch
            branches:
              only: master
